version: 1.0.0.{build}
os: WMF 5

branches:
  only:
    - master

skip_commits:
  files:
    - README.md

init:
  - git config --global core.autocrlf false

install:
  - ps: |
      Install-PackageProvider -Name NuGet -Force | Out-Null
      Install-Module -Name Pester -Scope CurrentUser -Force | Out-Null

build: off

test_script:
  - ps: |
      $testSource = Join-Path $Env:APPVEYOR_BUILD_FOLDER test -Resolve
      $testResultsFile = Join-Path $Env:APPVEYOR_BUILD_FOLDER TestResults.xml
      $res = Invoke-Pester -Path $testSource -OutputFormat 'NUnitXml' -OutputFile $testResultsFile -PassThru
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($Env:APPVEYOR_JOB_ID)", $testResultsFile)
      if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}

on_success:
- ps: >-
    If ($env:APPVEYOR_PULL_REQUEST_NUMBER -ne $null)
    {
        Write-Host "Build is from a PR, not executing post-build step"
        return
    }
    ElseIf ($env:APPVEYOR_REPO_BRANCH -ne "master")
    {
        Write-Host "Build is not from a master branch, not executing post-build step"
        return
    }

    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

    $diff = Invoke-RestMethod ("https://api.github.com/repos/DotNetRu/Audit/commits/" + $env:APPVEYOR_REPO_COMMIT)

    $meetups = $diff.files | where {($_.status -eq "added") -and ($_.filename.StartsWith("db/meetups"))} | measure

    if ($meetups.Count -eq 0)
    {
        Write-Host "No new meetups added, won't notify users"
        return
    }

    $Headers = @{
        "Authorization" = "key=AAAAFNhjiFs:APA91bHOL6Mj_K1C-7svthHae1oWTMBhKwh3hHGgMtzrwRls7i3lVNqUX4vW07-8bxZzll5N6n6S8gFwIXdIJycKNWu3nXJlmrRdRRzb8zRIEEgF_-rpFziC5p6bmqFA89Bod_CgyTju"
        "Content-Type"  = "application/json"
    }

    $url = "https://fcm.googleapis.com/fcm/send"

    $body =
    @'

    {
      "to": "/topics/AuditUpdate",
      "data": {
        "my_custom_key": "my_custom_value"
        }
    }

    '@

    Invoke-WebRequest -Uri $url -Headers $Headers -Method 'POST' -Body $body
