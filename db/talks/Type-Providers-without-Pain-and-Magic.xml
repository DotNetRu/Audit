<Talk>
  <Id>Type-Providers-without-Pain-and-Magic</Id>
  <SpeakerIds>
    <SpeakerId>Roman-Nevolin</SpeakerId>
  </SpeakerIds>
  <Title>Провайдеры типов без боли и магии</Title>
  <Description>Newtonsoft.Json — самый популярный пакет в NuGet. А рядом с ним, на третьем месте, — Entity Framework. Пожалуй, это неплохо демонстрирует, насколько часто.NET разработчики обрабатывают разнообразные данные. И для каждого типа данных — своя библиотека, а еще куча классов-оберток, которые приходится писать ради получения всех благ строгой типизации. И делать это нужно для каждого нового источника данных.

Однако F# предлагает нам другое решение вечной проблемы — провайдеры типов. Решение, которое позволяет максимально упростить работу с любыми типами данных, избавиться от написания и сопровождения классов оберток, а заодно и решить совсем другие проблемы, вроде рисования сложных графиков и работы с нейронными сетями средствами F#. Если вы хотите узнать, как использовать провайдеры типов, какие проблемы они решают, как работают и как написать собственный провайдер для ваших задач, — приходите на этот доклад!</Description>
  <SlidesUrl>https://github.com/DotNetRu/AuditBlobs/blob/master/slides/Type-Providers-without-Pain-and-Magic.pdf</SlidesUrl>
  <VideoUrl>https://www.youtube.com/watch?v=x5RbkENciMU</VideoUrl>
</Talk>